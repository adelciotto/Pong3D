#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input /home/magicbush/Code/Games/pong3d/code/shaders/game_phong.glsl --output /home/magicbush/Code/Games/pong3d/cmake-build-release/game_phong.glsl.h --slang glsl410

    Overview:
    =========
    Shader program: 'program':
        Get shader desc: game_phong_program_shader_desc(sg_query_backend());
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_game_phong_program_a_obj_position => 0
            ATTR_game_phong_program_a_obj_normal => 1
    Bindings:
        Uniform block 'vs_params':
            C struct: game_phong_vs_params_t
            Bind slot: UB_game_phong_vs_params => 0
        Uniform block 'fs_material':
            C struct: game_phong_fs_material_t
            Bind slot: UB_game_phong_fs_material => 3
        Uniform block 'fs_dir_light':
            C struct: game_phong_fs_dir_light_t
            Bind slot: UB_game_phong_fs_dir_light => 1
        Uniform block 'fs_point_light_0':
            C struct: game_phong_fs_point_light_0_t
            Bind slot: UB_game_phong_fs_point_light_0 => 2
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before game_phong.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_game_phong_program_a_obj_position (0)
#define ATTR_game_phong_program_a_obj_normal (1)
#define UB_game_phong_vs_params (0)
#define UB_game_phong_fs_material (3)
#define UB_game_phong_fs_dir_light (1)
#define UB_game_phong_fs_point_light_0 (2)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct game_phong_vs_params_t {
    zpl_mat4 u_obj_to_view_transform;
    zpl_mat4 u_obj_to_view_normal_transform;
    zpl_mat4 u_view_to_clip_transform;
} game_phong_vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct game_phong_fs_material_t {
    zpl_vec3 color;
    float shininess;
} game_phong_fs_material_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct game_phong_fs_dir_light_t {
    zpl_vec3 direction;
    uint8_t _pad_12[4];
    zpl_vec3 color;
    uint8_t _pad_28[4];
    zpl_vec3 ambient;
    uint8_t _pad_44[4];
} game_phong_fs_dir_light_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct game_phong_fs_point_light_0_t {
    zpl_vec3 view_position;
    uint8_t _pad_12[4];
    zpl_vec3 color;
    uint8_t _pad_28[4];
    zpl_vec3 ambient;
    float falloff;
    float radius;
    uint8_t _pad_52[12];
} game_phong_fs_point_light_0_t;
#pragma pack(pop)
/*
    #version 410

    uniform vec4 vs_params[12];
    layout(location = 0) in vec3 a_obj_position;
    layout(location = 0) out vec3 v_view_position;
    layout(location = 1) out vec3 v_view_normal;
    layout(location = 1) in vec3 a_obj_normal;

    void main()
    {
        vec4 _28 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * vec4(a_obj_position, 1.0);
        v_view_position = _28.xyz;
        mat4 _36 = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]);
        v_view_normal = normalize(mat3(_36[0].xyz, _36[1].xyz, _36[2].xyz) * a_obj_normal);
        gl_Position = mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * _28;
    }

*/
static const uint8_t game_phong_vs_source_glsl410[630] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x6f,0x62,0x6a,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,
    0x61,0x5f,0x6f,0x62,0x6a,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x38,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,
    0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,
    0x61,0x5f,0x6f,0x62,0x6a,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x76,0x69,0x65,0x77,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x32,0x38,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x33,
    0x36,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x6d,0x61,0x74,0x33,0x28,0x5f,0x33,0x36,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,
    0x20,0x5f,0x33,0x36,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x33,0x36,
    0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x61,0x5f,0x6f,0x62,0x6a,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,
    0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x32,0x38,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 410

    uniform vec4 fs_material[1];
    uniform vec4 fs_dir_light[3];
    uniform vec4 fs_point_light_0[4];
    layout(location = 0) in vec3 v_view_position;
    layout(location = 1) in vec3 v_view_normal;
    layout(location = 1) out vec4 bright_color;
    layout(location = 0) out vec4 frag_color;

    float compute_specular(vec3 L, vec3 V, vec3 N, float shininess)
    {
        return pow(max(0.0, dot(V, -reflect(L, N))), shininess);
    }

    float compute_diffuse(vec3 L, vec3 N)
    {
        return max(0.0, dot(L, N));
    }

    vec3 directional_light(vec3 light_dir, vec3 light_color, vec3 light_ambient, vec3 V, vec3 N)
    {
        vec3 _157 = normalize(-light_dir);
        vec3 param = _157;
        vec3 param_1 = V;
        vec3 param_2 = N;
        float param_3 = fs_material[0].w;
        vec3 param_4 = _157;
        vec3 param_5 = N;
        return fma(fs_material[0].xyz, (light_color * compute_diffuse(param_4, param_5)) + light_ambient, vec3(compute_specular(param, param_1, param_2, param_3)));
    }

    float attenuation(float r, float f, float d)
    {
        float _51 = (d / r) + 1.0;
        return max(((1.0 / (_51 * _51)) - f) / (1.0 - f), 0.0);
    }

    vec3 point_light(vec3 light_view_pos, vec3 light_color, vec3 light_ambient, float light_falloff, float light_radius, vec3 V, vec3 N)
    {
        vec3 _93 = light_view_pos - v_view_position;
        float param = light_radius;
        float param_1 = light_falloff;
        float param_2 = length(_93);
        float _104 = attenuation(param, param_1, param_2);
        vec3 _107 = normalize(_93);
        vec3 param_3 = _107;
        vec3 param_4 = V;
        vec3 param_5 = N;
        float param_6 = fs_material[0].w;
        vec3 param_7 = _107;
        vec3 param_8 = N;
        return fma(fs_material[0].xyz, (((light_color * compute_diffuse(param_7, param_8)) * _104) * 3.0) + light_ambient, vec3(compute_specular(param_3, param_4, param_5, param_6) * _104));
    }

    void main()
    {
        vec3 _192 = normalize(v_view_position);
        vec3 _196 = normalize(v_view_normal);
        vec3 color = vec3(0.0);
        vec3 param = fs_dir_light[0].xyz;
        vec3 param_1 = fs_dir_light[1].xyz;
        vec3 param_2 = fs_dir_light[2].xyz;
        vec3 param_3 = _192;
        vec3 param_4 = _196;
        color += directional_light(param, param_1, param_2, param_3, param_4);
        vec3 param_5 = fs_point_light_0[0].xyz;
        vec3 param_6 = fs_point_light_0[1].xyz;
        vec3 param_7 = fs_point_light_0[2].xyz;
        float param_8 = fs_point_light_0[2].w;
        float param_9 = fs_point_light_0[3].x;
        vec3 param_10 = _192;
        vec3 param_11 = _196;
        vec3 _244 = color;
        vec3 _245 = _244 + point_light(param_5, param_6, param_7, param_8, param_9, param_10, param_11);
        color = _245;
        if (dot(_245, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875)) > 1.0)
        {
            bright_color = vec4(color, 1.0);
        }
        else
        {
            bright_color = vec4(0.0, 0.0, 0.0, 1.0);
        }
        frag_color = vec4(color, 1.0);
    }

*/
static const uint8_t game_phong_fs_source_glsl410[2853] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x6d,0x61,
    0x74,0x65,0x72,0x69,0x61,0x6c,0x5b,0x31,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5b,0x33,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x30,0x5b,0x34,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x34,0x20,0x62,0x72,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x63,0x6f,0x6d,0x70,0x75,0x74,0x65,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x28,0x76,0x65,0x63,0x33,0x20,0x4c,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,
    0x56,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x4e,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x73,0x68,0x69,0x6e,0x69,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x70,0x6f,0x77,0x28,0x6d,0x61,0x78,
    0x28,0x30,0x2e,0x30,0x2c,0x20,0x64,0x6f,0x74,0x28,0x56,0x2c,0x20,0x2d,0x72,0x65,
    0x66,0x6c,0x65,0x63,0x74,0x28,0x4c,0x2c,0x20,0x4e,0x29,0x29,0x29,0x2c,0x20,0x73,
    0x68,0x69,0x6e,0x69,0x6e,0x65,0x73,0x73,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x63,0x6f,0x6d,0x70,0x75,0x74,0x65,0x5f,0x64,0x69,0x66,0x66,
    0x75,0x73,0x65,0x28,0x76,0x65,0x63,0x33,0x20,0x4c,0x2c,0x20,0x76,0x65,0x63,0x33,
    0x20,0x4e,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x2c,0x20,0x64,0x6f,0x74,0x28,0x4c,0x2c,
    0x20,0x4e,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x64,0x69,
    0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x5f,0x6c,0x69,0x67,0x68,0x74,0x28,
    0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,
    0x69,0x65,0x6e,0x74,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x56,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x4e,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x31,0x35,0x37,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x2d,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x69,0x72,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,
    0x5f,0x31,0x35,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x56,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x4e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x33,0x20,0x3d,0x20,0x66,0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,
    0x6c,0x5b,0x30,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x35,0x37,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x35,0x20,0x3d,0x20,0x4e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x66,0x6d,0x61,0x28,0x66,0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,
    0x6c,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x28,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x63,0x6f,0x6d,0x70,0x75,0x74,0x65,
    0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x29,0x20,0x2b,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x28,0x63,0x6f,0x6d,0x70,0x75,0x74,0x65,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x33,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x61,0x74,0x74,0x65,0x6e,0x75,0x61,0x74,0x69,0x6f,0x6e,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x72,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x35,0x31,0x20,0x3d,0x20,0x28,0x64,0x20,0x2f,0x20,0x72,
    0x29,0x20,0x2b,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x6d,0x61,0x78,0x28,0x28,0x28,0x31,0x2e,0x30,0x20,0x2f,0x20,
    0x28,0x5f,0x35,0x31,0x20,0x2a,0x20,0x5f,0x35,0x31,0x29,0x29,0x20,0x2d,0x20,0x66,
    0x29,0x20,0x2f,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x66,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x69,
    0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x28,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,
    0x6e,0x74,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x66,0x61,0x6c,0x6c,0x6f,0x66,0x66,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x20,0x56,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x4e,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x20,0x2d,0x20,0x76,
    0x5f,0x76,0x69,0x65,0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x66,0x61,0x6c,0x6c,0x6f,0x66,
    0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x39,
    0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x30,0x34,0x20,0x3d,0x20,0x61,0x74,0x74,0x65,0x6e,0x75,0x61,0x74,0x69,0x6f,0x6e,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x37,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x5f,0x39,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x31,
    0x30,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x56,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x4e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x36,0x20,0x3d,0x20,0x66,0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5b,
    0x30,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x30,0x37,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,
    0x3d,0x20,0x4e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x66,0x6d,0x61,0x28,0x66,0x73,0x5f,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5b,
    0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x28,0x28,0x28,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x63,0x6f,0x6d,0x70,0x75,0x74,0x65,
    0x5f,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x29,0x29,0x20,0x2a,0x20,0x5f,0x31,
    0x30,0x34,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x29,0x20,0x2b,0x20,0x6c,0x69,0x67,
    0x68,0x74,0x5f,0x61,0x6d,0x62,0x69,0x65,0x6e,0x74,0x2c,0x20,0x76,0x65,0x63,0x33,
    0x28,0x63,0x6f,0x6d,0x70,0x75,0x74,0x65,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,
    0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x36,0x29,0x20,0x2a,0x20,0x5f,0x31,0x30,0x34,0x29,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x39,0x32,0x20,0x3d,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x76,0x69,0x65,
    0x77,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x39,0x36,0x20,0x3d,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x76,0x69,0x65,0x77,0x5f,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x20,0x3d,0x20,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x73,0x5f,0x64,
    0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x20,0x3d,0x20,0x66,0x73,0x5f,0x64,0x69,0x72,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x31,0x39,0x32,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x39,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x2b,0x3d,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,
    0x6e,0x61,0x6c,0x5f,0x6c,0x69,0x67,0x68,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,
    0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x30,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x36,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,
    0x67,0x68,0x74,0x5f,0x30,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,
    0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x30,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x66,0x73,
    0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x30,0x5b,0x32,
    0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x6f,0x69,0x6e,
    0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x5f,0x30,0x5b,0x33,0x5d,0x2e,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x30,0x20,0x3d,0x20,0x5f,0x31,0x39,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,0x20,0x5f,0x31,
    0x39,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x34,
    0x34,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x32,0x34,0x35,0x20,0x3d,0x20,0x5f,0x32,0x34,0x34,0x20,
    0x2b,0x20,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x30,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,0x34,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x64,0x6f,0x74,0x28,0x5f,0x32,
    0x34,0x35,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x32,0x31,0x32,0x35,0x39,
    0x39,0x39,0x39,0x32,0x37,0x35,0x32,0x30,0x37,0x35,0x31,0x39,0x35,0x33,0x31,0x32,
    0x35,0x2c,0x20,0x30,0x2e,0x37,0x31,0x35,0x32,0x30,0x30,0x30,0x30,0x36,0x39,0x36,
    0x31,0x38,0x32,0x32,0x35,0x30,0x39,0x37,0x36,0x35,0x36,0x32,0x35,0x2c,0x20,0x30,
    0x2e,0x30,0x37,0x32,0x32,0x30,0x30,0x30,0x30,0x30,0x32,0x38,0x36,0x31,0x30,0x32,
    0x32,0x39,0x34,0x39,0x32,0x31,0x38,0x37,0x35,0x29,0x29,0x20,0x3e,0x20,0x31,0x2e,
    0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x62,0x72,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,
    0x72,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
static inline const sg_shader_desc* game_phong_program_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)game_phong_vs_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)game_phong_fs_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.attrs[0].glsl_name = "a_obj_position";
            desc.attrs[1].glsl_name = "a_obj_normal";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 12;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 48;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 3;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "fs_dir_light";
            desc.uniform_blocks[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[2].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[2].size = 64;
            desc.uniform_blocks[2].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[2].glsl_uniforms[0].array_count = 4;
            desc.uniform_blocks[2].glsl_uniforms[0].glsl_name = "fs_point_light_0";
            desc.uniform_blocks[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[3].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[3].size = 16;
            desc.uniform_blocks[3].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[3].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[3].glsl_uniforms[0].glsl_name = "fs_material";
            desc.label = "game_phong_program_shader";
        }
        return &desc;
    }
    return 0;
}
